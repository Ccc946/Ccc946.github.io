{"title":"typescript配置文件","uid":"ddb15248561add228bd6a63ffdb86463","slug":"TypeScript/05.typescript配置","date":"2023-02-05T15:30:34.000Z","updated":"2023-02-05T15:54:26.602Z","comments":true,"path":"api/articles/TypeScript/05.typescript配置.json","keywords":null,"cover":"../img/u=3648235042,1573336415&fm=253&fmt=auto&app=138&f=PNG.webp","content":"<h4 id=\"生成tsconfig-json-文件\"><a href=\"#生成tsconfig-json-文件\" class=\"headerlink\" title=\"生成tsconfig.json 文件\"></a><strong>生成tsconfig.json 文件</strong></h4><p>这个文件是通过tsc –init命令生成的</p>\n<p>配置详解</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"incremental\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// TS编译器在第一次编译之后会生成一个存储编译信息的文件，第二次编译会在第一次的基础上进行增量编译，可以提高编译的速度</span>\n  <span class=\"token property\">\"tsBuildInfoFile\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./buildFile\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 增量编译文件的存储位置</span>\n  <span class=\"token property\">\"diagnostics\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 打印诊断信息 </span>\n  <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ES5\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 目标语言的版本</span>\n  <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"CommonJS\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 生成代码的模板标准</span>\n  <span class=\"token property\">\"outFile\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./app.js\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 将多个相互依赖的文件生成一个文件，可以用在AMD模块中，即开启时应设置\"module\": \"AMD\",</span>\n  <span class=\"token property\">\"lib\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"DOM\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ES2015\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ScriptHost\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ES2019.Array\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// TS需要引用的库，即声明文件，es5 默认引用dom、es5、scripthost,如需要使用es的高级版本特性，通常都需要配置，如es8的数组新特性需要引入\"ES2019.Array\",</span>\n  <span class=\"token property\">\"allowJS\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 允许编译器编译JS，JSX文件</span>\n  <span class=\"token property\">\"checkJs\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 允许在JS文件中报错，通常与allowJS一起使用</span>\n  <span class=\"token property\">\"outDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./dist\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 指定输出目录</span>\n  <span class=\"token property\">\"rootDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 指定输出文件目录(用于输出)，用于控制输出目录结构</span>\n  <span class=\"token property\">\"declaration\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 生成声明文件，开启后会自动生成声明文件</span>\n  <span class=\"token property\">\"declarationDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./file\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 指定生成声明文件存放目录</span>\n  <span class=\"token property\">\"emitDeclarationOnly\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 只生成声明文件，而不会生成js文件</span>\n  <span class=\"token property\">\"sourceMap\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 生成目标文件的sourceMap文件</span>\n  <span class=\"token property\">\"inlineSourceMap\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 生成目标文件的inline SourceMap，inline SourceMap会包含在生成的js文件中</span>\n  <span class=\"token property\">\"declarationMap\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 为声明文件生成sourceMap</span>\n  <span class=\"token property\">\"typeRoots\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 声明文件目录，默认时node_modules/@types</span>\n  <span class=\"token property\">\"types\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 加载的声明文件包</span>\n  <span class=\"token property\">\"removeComments\"</span><span class=\"token operator\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 删除注释 </span>\n  <span class=\"token property\">\"noEmit\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 不输出文件,即编译后不会生成任何js文件</span>\n  <span class=\"token property\">\"noEmitOnError\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 发送错误时不输出任何文件</span>\n  <span class=\"token property\">\"noEmitHelpers\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 不生成helper函数，减小体积，需要额外安装，常配合importHelpers一起使用</span>\n  <span class=\"token property\">\"importHelpers\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 通过tslib引入helper函数，文件必须是模块</span>\n  <span class=\"token property\">\"downlevelIteration\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 降级遍历器实现，如果目标源是es3/5，那么遍历器会有降级的实现</span>\n  <span class=\"token property\">\"strict\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 开启所有严格的类型检查</span>\n  <span class=\"token property\">\"alwaysStrict\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 在代码中注入'use strict'</span>\n  <span class=\"token property\">\"noImplicitAny\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 不允许隐式的any类型</span>\n  <span class=\"token property\">\"strictNullChecks\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 不允许把null、undefined赋值给其他类型的变量</span>\n  <span class=\"token property\">\"strictFunctionTypes\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 不允许函数参数双向协变</span>\n  <span class=\"token property\">\"strictPropertyInitialization\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 类的实例属性必须初始化</span>\n  <span class=\"token property\">\"strictBindCallApply\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 严格的bind/call/apply检查</span>\n  <span class=\"token property\">\"noImplicitThis\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 不允许this有隐式的any类型</span>\n  <span class=\"token property\">\"noUnusedLocals\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 检查只声明、未使用的局部变量(只提示不报错)</span>\n  <span class=\"token property\">\"noUnusedParameters\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 检查未使用的函数参数(只提示不报错)</span>\n  <span class=\"token property\">\"noFallthroughCasesInSwitch\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 防止switch语句贯穿(即如果没有break语句后面不会执行)</span>\n  <span class=\"token property\">\"noImplicitReturns\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//每个分支都会有返回值</span>\n  <span class=\"token property\">\"esModuleInterop\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 允许export=导出，由import from 导入</span>\n  <span class=\"token property\">\"allowUmdGlobalAccess\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 允许在模块中全局变量的方式访问umd模块</span>\n  <span class=\"token property\">\"moduleResolution\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 模块解析策略，ts默认用node的解析策略，即相对的方式导入</span>\n  <span class=\"token property\">\"baseUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 解析非相对模块的基地址，默认是当前目录</span>\n  <span class=\"token property\">\"paths\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 路径映射，相对于baseUrl</span>\n    <span class=\"token comment\">// 如使用jq时不想使用默认版本，而需要手动指定版本，可进行如下配置</span>\n    <span class=\"token property\">\"jquery\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"node_modules/jquery/dist/jquery.min.js\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"rootDirs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"out\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 将多个目录放在一个虚拟目录下，用于运行时，即编译后引入文件的位置可能发生变化，这也设置可以虚拟src和out在同一个目录下，不用再去改变路径也不会报错</span>\n  <span class=\"token property\">\"listEmittedFiles\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 打印输出文件</span>\n  <span class=\"token property\">\"listFiles\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token comment\">// 打印编译的文件(包括引用的声明文件)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 指定一个匹配列表（属于自动指定该路径下的所有ts相关文件）</span>\n<span class=\"token property\">\"include\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n   <span class=\"token string\">\"src/**/*\"</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// 指定一个排除列表（include的反向操作）</span>\n <span class=\"token property\">\"exclude\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n   <span class=\"token string\">\"demo.ts\"</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// 指定哪些文件使用该配置（属于手动一个个指定文件）</span>\n <span class=\"token property\">\"files\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n   <span class=\"token string\">\"demo.ts\"</span>\n<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p> 介绍几个常用的</p>\n<p><strong>1.include</strong><br>指定编译文件默认是编译当前目录下所有的ts文件</p>\n<p><strong>2.exclude</strong><br>指定排除的文件</p>\n<p><strong>3.target</strong><br>指定编译js 的版本例如es5  es6</p>\n<p><strong>4.allowJS</strong><br>是否允许编译js文件</p>\n<p><strong>5.removeComments</strong><br>是否在编译过程中删除文件中的注释</p>\n<p><strong>6.rootDir</strong><br>编译文件的目录</p>\n<p><strong>7.outDir</strong><br>输出的目录</p>\n<p><strong>8.sourceMap</strong><br>代码源文件</p>\n<p><strong>9.strict</strong><br>严格模式</p>\n<p><strong>10.module</strong><br>默认common.js  可选es6模式 amd  umd 等</p>\n","feature":true,"text":"生成tsconfig.json 文件这个文件是通过tsc –init命令生成的 配置详解 \"compilerOptions\": &#123; \"incremental\": true, // TS编译器在第一次编译之后会生成一个存储编译信息的文件，第二次编译会在第一次的基础上进行增...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"TypeScript","slug":"TypeScript","count":5,"path":"api/categories/TypeScript.json"}],"tags":[{"name":"TypeScript","slug":"TypeScript","count":5,"path":"api/tags/TypeScript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%94%9F%E6%88%90tsconfig-json-%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">生成tsconfig.json 文件</span></a></li></ol>","author":{"name":"chenin","slug":"chenin","avatar":"/img/touxiang.jpg","link":"https://github.com/Ccc946","description":"盛年不重来，一日难再晨。及时宜自勉，岁月不待人。","socials":{"github":"https://github.com/Ccc946","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"typescript泛型","uid":"520b2e36f5b7d18dabaa9ecbe26ea061","slug":"TypeScript/04.typescript泛型","date":"2023-02-05T15:20:06.000Z","updated":"2023-02-05T15:54:20.569Z","comments":true,"path":"api/articles/TypeScript/04.typescript泛型.json","keywords":null,"cover":"../img/u=3648235042,1573336415&fm=253&fmt=auto&app=138&f=PNG.webp","text":"泛型在TypeScript 是很重要的东西 例如vue3 是用ts编写的 里面用到了非常多的泛型 ok:我们看一个小例子 函数泛型我写了两个函数一个是数字类型的函数，另一个是字符串类型的函数,其实就是类型不同， 实现的功能是一样的，这时候我们就可以使用泛型来优化 function...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"TypeScript","slug":"TypeScript","count":5,"path":"api/categories/TypeScript.json"}],"tags":[{"name":"TypeScript","slug":"TypeScript","count":5,"path":"api/tags/TypeScript.json"}],"author":{"name":"chenin","slug":"chenin","avatar":"/img/touxiang.jpg","link":"https://github.com/Ccc946","description":"盛年不重来，一日难再晨。及时宜自勉，岁月不待人。","socials":{"github":"https://github.com/Ccc946","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}