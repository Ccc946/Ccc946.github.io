{"title":"koa学习笔记","uid":"d2b17992ae092d8ffe2150a17d7a79d0","slug":"koa","date":"2021-04-10T10:02:55.000Z","updated":"2023-02-04T05:29:08.555Z","comments":true,"path":"api/articles/koa.json","keywords":null,"cover":"../img/default-cover.jpg","content":"<h2 id=\"初始化项目\"><a href=\"#初始化项目\" class=\"headerlink\" title=\"初始化项目\"></a>初始化项目</h2><pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token preprocessor property\"># 初始化package.json</span>\nnpm init\n\n<span class=\"token preprocessor property\"># 安装koa2 </span>\nnpm install koa<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"hello-world-代码\"><a href=\"#hello-world-代码\" class=\"headerlink\" title=\"hello world 代码\"></a>hello world 代码</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"> <span class=\"token keyword\">const</span> Koa <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//引入Koa框架</span>\n\n <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Koa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">async</span> <span class=\"token parameter\">ctx</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token string\">'Hello Koa'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 监听3000端口</span>\n app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Server running at port 3000!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">node app<span class=\"token punctuation\">.</span>js         <span class=\"token comment\">// 启动服务</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h2 id=\"async-await的使用\"><a href=\"#async-await的使用\" class=\"headerlink\" title=\"async/await的使用\"></a>async/await的使用</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">getSyncTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">let</span> startTime <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">let</span> endTime <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> endTime <span class=\"token operator\">-</span> startTime\n        <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span> data <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span> err <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span> err <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getSyncData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> time <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getSyncTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">endTime - startTime = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>time<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token keyword\">return</span> data\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getSyncData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span> data <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"从上述例子可以看出-async-await-的特点：\"><a href=\"#从上述例子可以看出-async-await-的特点：\" class=\"headerlink\" title=\"从上述例子可以看出 async/await 的特点：\"></a>从上述例子可以看出 async/await 的特点：</h3><ul>\n<li>可以让异步逻辑用同步写法实现</li>\n<li>最底层的await返回需要是Promise对象</li>\n<li>可以通过多层 async function 的同步写法代替传统的callback嵌套</li>\n</ul>\n<h2 id=\"koa-router中间件\"><a href=\"#koa-router中间件\" class=\"headerlink\" title=\"koa-router中间件\"></a>koa-router中间件</h2><h3 id=\"安装koa-router中间件\"><a href=\"#安装koa-router中间件\" class=\"headerlink\" title=\"安装koa-router中间件\"></a>安装koa-router中间件</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">npm i koa<span class=\"token operator\">-</span>router <span class=\"token operator\">--</span>save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"koa-router的使用\"><a href=\"#koa-router的使用\" class=\"headerlink\" title=\"koa-router的使用\"></a>koa-router的使用</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"> <span class=\"token keyword\">const</span> Koa <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//引入Koa框架</span>\n <span class=\"token keyword\">const</span> Router <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-router'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//引入koa-router 中间件</span>\n\n<span class=\"token comment\">// 实例化 app</span>\n <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Koa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">// 路由</span>\n<span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token string\">'Router 请求'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 配置路由</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">.</span><span class=\"token function\">routes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">.</span><span class=\"token function\">allowedMethods</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">// 监听3000端口</span>\n app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Server running at port 3000!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"请求数据获取\"><a href=\"#请求数据获取\" class=\"headerlink\" title=\"请求数据获取\"></a>请求数据获取</h2><h3 id=\"GTET请求数据获取\"><a href=\"#GTET请求数据获取\" class=\"headerlink\" title=\"GTET请求数据获取\"></a>GTET请求数据获取</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"> <span class=\"token keyword\">const</span> Koa <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//引入Koa框架</span>\n <span class=\"token keyword\">const</span> Router <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-router'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//引入koa-router 中间件</span>\n\n<span class=\"token comment\">// 实例化 app</span>\n <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Koa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">// 路由</span>\n<span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/user'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> url <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span>url\n    <span class=\"token comment\">// 从上下文的request对象中获取</span>\n    <span class=\"token keyword\">let</span> request <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span>request\n    <span class=\"token keyword\">let</span> req_query <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>query\n    <span class=\"token keyword\">let</span> req_querystring <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>querystring\n\n    <span class=\"token comment\">// 从上下文中直接获取</span>\n    <span class=\"token keyword\">let</span> ctx_query <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span>query\n    <span class=\"token keyword\">let</span> ctx_querystring <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span>querystring\n\n    ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n      url<span class=\"token punctuation\">,</span>\n      req_query<span class=\"token punctuation\">,</span>\n      req_querystring<span class=\"token punctuation\">,</span>\n      ctx_query<span class=\"token punctuation\">,</span>\n      ctx_querystring\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 配置路由</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">.</span><span class=\"token function\">routes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">.</span><span class=\"token function\">allowedMethods</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">// 监听3000端口</span>\n app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Server running at port 3000!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"http://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c4e553d01db74124822801d3ca6949ff~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"image-20200324142458926\"></p>\n<h3 id=\"POST请求数据获取\"><a href=\"#POST请求数据获取\" class=\"headerlink\" title=\"POST请求数据获取\"></a>POST请求数据获取</h3><h4 id=\"koa-bodyparser中间件\"><a href=\"#koa-bodyparser中间件\" class=\"headerlink\" title=\"koa-bodyparser中间件\"></a>koa-bodyparser中间件</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">npm install koa<span class=\"token operator\">-</span>body <span class=\"token operator\">--</span>save\n <span class=\"token keyword\">const</span> Koa <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//引入Koa框架</span>\n <span class=\"token keyword\">const</span> Router <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-router'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//引入koa-router 中间件</span>\n\n <span class=\"token keyword\">const</span> bodyParser <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-bodyparser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 实例化 app</span>\n <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Koa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token comment\">// 使用ctx.body解析中间件</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">bodyParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/* 支持json,form,text类型\napp.use(bodyparser(&#123;\n  enableTypes:['json', 'form', 'text']\n&#125;))\n*/</span>\n<span class=\"token comment\">// 路由</span>\n<span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token parameter\">ctx</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 配置路由</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">.</span><span class=\"token function\">routes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">.</span><span class=\"token function\">allowedMethods</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">// 监听3000端口</span>\n app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Server running at port 3000!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"静态资源加载\"><a href=\"#静态资源加载\" class=\"headerlink\" title=\"静态资源加载\"></a>静态资源加载</h2><h3 id=\"koa-static中间件使用\"><a href=\"#koa-static中间件使用\" class=\"headerlink\" title=\"koa-static中间件使用\"></a>koa-static中间件使用</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Koa <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">static</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-static'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Koa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 静态资源目录对于相对入口文件index.js的路径</span>\n<span class=\"token keyword\">const</span> staticPath <span class=\"token operator\">=</span> <span class=\"token string\">'./static'</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">static</span><span class=\"token punctuation\">(</span>\n  path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span> __dirname<span class=\"token punctuation\">,</span>  staticPath<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span> <span class=\"token parameter\">ctx</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token string\">'hello world'</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"koa-static-router中间件-实现多个-amp-amp-多层路由加载静态资源\"><a href=\"#koa-static-router中间件-实现多个-amp-amp-多层路由加载静态资源\" class=\"headerlink\" title=\"koa-static-router中间件, 实现多个&amp;&amp;多层路由加载静态资源\"></a>koa-static-router中间件, 实现多个&amp;&amp;多层路由加载静态资源</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">npm install koa<span class=\"token operator\">-</span><span class=\"token keyword\">static</span><span class=\"token operator\">-</span>router<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"简单配置\"><a href=\"#简单配置\" class=\"headerlink\" title=\"简单配置\"></a>简单配置</h5><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">static</span><span class=\"token punctuation\">(</span><span class=\"token string\">'public'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\">//默认配置: &#123;dir:public  route:'/public'&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"单个路由\"><a href=\"#单个路由\" class=\"headerlink\" title=\"单个路由\"></a>单个路由</h5><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token keyword\">static</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-static-router'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">static</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n     dir<span class=\"token punctuation\">,</span>  <span class=\"token comment\">//静态资源目录对于相对入口文件index.js的路径</span>\n     router   <span class=\"token comment\">//路由命名</span>\n <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"多个路由\"><a href=\"#多个路由\" class=\"headerlink\" title=\"多个路由\"></a>多个路由</h5><p>访问 localhost:3000/public/image/dir/1.png</p>\n<p>访问 localhost:3000/static/image/dir/2.png</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Koa <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Koa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">static</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-static-router'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">// 单个路由</span>\n<span class=\"token comment\">// app.use(static(&#123;</span>\n<span class=\"token comment\">//     dir:'public',</span>\n<span class=\"token comment\">//     router:'/static/'     //路由长度 =1</span>\n<span class=\"token comment\">// &#125;))</span>\n\n\n<span class=\"token comment\">//多个路由</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">static</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">dir</span><span class=\"token operator\">:</span><span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">//静态资源目录对于相对入口文件index.js的路径</span>\n    <span class=\"token literal-property property\">router</span><span class=\"token operator\">:</span><span class=\"token string\">'/public/image/'</span>   <span class=\"token comment\">//路由命名   路由长度 =2</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">dir</span><span class=\"token operator\">:</span><span class=\"token string\">'static'</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">//静态资源目录对于相对入口文件index.js的路径</span>\n    <span class=\"token literal-property property\">router</span><span class=\"token operator\">:</span><span class=\"token string\">'/static/image/'</span>    <span class=\"token comment\">//路由命名  路由长度 =2</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span> <span class=\"token parameter\">ctx</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token string\">'hello world'</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'build success'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"cookie-session\"><a href=\"#cookie-session\" class=\"headerlink\" title=\"cookie/session\"></a>cookie/session</h2><h3 id=\"koa2使用cookie\"><a href=\"#koa2使用cookie\" class=\"headerlink\" title=\"koa2使用cookie\"></a>koa2使用cookie</h3><p>koa提供了从上下文直接读取、写入cookie的方法</p>\n<ul>\n<li>ctx.cookies.get(name, [options]) 读取上下文请求中的cookie</li>\n<li>ctx.cookies.set(name, value, [options]) 在上下文中写入cookie</li>\n</ul>\n<p>koa2 中操作的cookies是使用了npm的cookies模块，源码在<a href=\"https://github.com/pillarjs/cookies%EF%BC%8C%E6%89%80%E4%BB%A5%E5%9C%A8%E8%AF%BB%E5%86%99cookie%E7%9A%84%E4%BD%BF%E7%94%A8%E5%8F%82%E6%95%B0%E4%B8%8E%E8%AF%A5%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B8%80%E8%87%B4%E3%80%82\">https://github.com/pillarjs/cookies，所以在读写cookie的使用参数与该模块的使用一致。</a></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Koa <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Koa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span> <span class=\"token parameter\">ctx</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> ctx<span class=\"token punctuation\">.</span>url <span class=\"token operator\">===</span> <span class=\"token string\">'/index'</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    ctx<span class=\"token punctuation\">.</span>cookies<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">'cid'</span><span class=\"token punctuation\">,</span> \n      <span class=\"token string\">'hello world'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">domain</span><span class=\"token operator\">:</span> <span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 写cookie所在的域名</span>\n        <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'/index'</span><span class=\"token punctuation\">,</span>       <span class=\"token comment\">// 写cookie所在的路径</span>\n        <span class=\"token literal-property property\">maxAge</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// cookie有效时长</span>\n        <span class=\"token literal-property property\">expires</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2017-02-15'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// cookie失效时间</span>\n        <span class=\"token literal-property property\">httpOnly</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 是否只用于http请求中获取</span>\n        <span class=\"token literal-property property\">overwrite</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>  <span class=\"token comment\">// 是否允许重写</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">)</span>\n    ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token string\">'cookie is ok'</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token string\">'hello world'</span> \n  <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[demo] cookie is starting at port 3000'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"http://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/27b418f620fb43c0a1f0249ee1dd78bb~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"image-20200324145954133\"></p>\n<h3 id=\"koa2实现session\"><a href=\"#koa2实现session\" class=\"headerlink\" title=\"koa2实现session\"></a>koa2实现session</h3><p>koa2原生功能只提供了cookie的操作，但是没有提供session操作。session就只用自己实现或者通过第三方中间件实现。在koa2中实现session的方案有一下几种</p>\n<ul>\n<li>如果session数据量很小，可以直接存在内存中</li>\n<li>如果session数据量很大，则需要存储介质存放session数据</li>\n</ul>\n<h4 id=\"koa-session的使用\"><a href=\"#koa-session的使用\" class=\"headerlink\" title=\"koa-session的使用\"></a>koa-session的使用</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">npm install koa<span class=\"token operator\">-</span>session <span class=\"token operator\">--</span>save\n<span class=\"token keyword\">const</span> Koa <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Koa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> Koa_Session <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-session'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      \n\n<span class=\"token comment\">// 这个是配合signed属性的签名key</span>\n<span class=\"token keyword\">const</span> session_signed_key <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"some secret hurr\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// 配置</span>\n<span class=\"token keyword\">const</span> session_config <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'koa:sess'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">/**  cookie的key。 (默认是 koa:sess) */</span>\n    <span class=\"token literal-property property\">maxAge</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token operator\">*</span><span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">/**  session 过期时间，以毫秒ms为单位计算 。*/</span>\n    <span class=\"token literal-property property\">autoCommit</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">/** 自动提交到响应头。(默认是 true) */</span>\n    <span class=\"token literal-property property\">overwrite</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">/** 是否允许重写 。(默认是 true) */</span>\n    <span class=\"token literal-property property\">httpOnly</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">/** 是否设置HttpOnly，如果在Cookie中设置了\"HttpOnly\"属性，那么通过程序(JS脚本、Applet等)将无法读取到Cookie信息，这样能有效的防止XSS攻击。  (默认 true) */</span>\n    <span class=\"token literal-property property\">signed</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">/** 是否签名。(默认是 true) */</span>\n    <span class=\"token literal-property property\">rolling</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">/** 是否每次响应时刷新Session的有效期。(默认是 false) */</span>\n    <span class=\"token literal-property property\">renew</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">/** 是否在Session快过期时刷新Session的有效期。(默认是 false) */</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 实例化</span>\n<span class=\"token keyword\">const</span> session <span class=\"token operator\">=</span> <span class=\"token function\">Koa_Session</span><span class=\"token punctuation\">(</span>session_config<span class=\"token punctuation\">,</span> app<span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span>keys <span class=\"token operator\">=</span> session_signed_key<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 使用中间件，注意有先后顺序</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span> <span class=\"token parameter\">ctx</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token keyword\">let</span> n <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>views <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>views <span class=\"token operator\">=</span> <span class=\"token operator\">++</span>n<span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'chen'</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> n <span class=\"token operator\">+</span> <span class=\"token string\">' views'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[demo] cookie is starting at port 3000'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"http://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8dace2928b9540bbb8505744b1fef256~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"image-20200324152342592\"></p>\n<h2 id=\"使用ejs模板\"><a href=\"#使用ejs模板\" class=\"headerlink\" title=\"使用ejs模板\"></a>使用ejs模板</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">npm i koa<span class=\"token operator\">-</span>ejs <span class=\"token operator\">--</span>save\n<span class=\"token comment\">/**\n * 项目入口文件\n */</span>\n\n<span class=\"token keyword\">const</span> Koa <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Koa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bodyParser <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-bodyparser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> Router <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-router'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> render <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-ejs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">bodyParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 初始化ejs，设置后缀为html，文件目录为`views`</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">root</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'views'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">layout</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">viewExt</span><span class=\"token operator\">:</span> <span class=\"token string\">'html'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">cache</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">debug</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">// 渲染首页</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx<span class=\"token punctuation\">,</span>next</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">await</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'我是首页'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token string\">'我是内容啊'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">.</span><span class=\"token function\">routes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">.</span><span class=\"token function\">allowedMethods</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 监听3000端口</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"连接mysql数据库\"><a href=\"#连接mysql数据库\" class=\"headerlink\" title=\"连接mysql数据库\"></a>连接mysql数据库</h2><h3 id=\"安装Sequelize\"><a href=\"#安装Sequelize\" class=\"headerlink\" title=\"安装Sequelize\"></a>安装Sequelize</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">npm install mysql2 <span class=\"token operator\">--</span>save\nnpm install sequelize <span class=\"token operator\">--</span>save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"使用-Sequelize-初始化连接池\"><a href=\"#使用-Sequelize-初始化连接池\" class=\"headerlink\" title=\"使用 Sequelize 初始化连接池\"></a>使用 Sequelize 初始化连接池</h3><p><img src=\"http://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/aba68df989934a568f88ba05526ed004~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"img\"></p>\n<h3 id=\"创建数据表模型\"><a href=\"#创建数据表模型\" class=\"headerlink\" title=\"创建数据表模型\"></a>创建数据表模型</h3><p><img src=\"http://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cfe3f585fbcd4304b969f0f037c63677~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"image-20200324154643856\"></p>\n<h3 id=\"数据表控制器\"><a href=\"#数据表控制器\" class=\"headerlink\" title=\"数据表控制器\"></a>数据表控制器</h3><p><img src=\"http://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a0441debb5344c2cbfa07e7bd2eed19e~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"image-20200324154913167\"></p>\n<h3 id=\"数据路由表\"><a href=\"#数据路由表\" class=\"headerlink\" title=\"数据路由表\"></a>数据路由表</h3><p><img src=\"http://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a6a7364f0c7e40c4b8eb66ba698779a4~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"image-20200324155028791\"></p>\n<h2 id=\"解决跨域问题\"><a href=\"#解决跨域问题\" class=\"headerlink\" title=\"解决跨域问题\"></a>解决跨域问题</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">npm i koa2<span class=\"token operator\">-</span>cors <span class=\"token operator\">--</span>save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> koa <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">koa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> router <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-router'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cors <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa2-cors'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">cors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">origin</span><span class=\"token operator\">:</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 允许来自所有域名请求</span>\n   <span class=\"token comment\">/* origin: function (ctx) &#123;\n        if (ctx.url === '/test') &#123;\n            return \"*\"; // 允许来自所有域名请求\n        &#125;\n        return 'http://localhost:8080'; / 这样就能只允许 http://localhost:8080 这个域名的请求了\n    &#125;,*/</span>\n  <span class=\"token literal-property property\">exposeHeaders</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'WWW-Authenticate'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Server-Authorization'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">maxAge</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">credentials</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">allowMethods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'DELETE'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">allowHeaders</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Authorization'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Accept'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token string\">'恭喜 __小简__ 你成功登陆了'</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \napp\n    <span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">.</span><span class=\"token function\">routes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">.</span><span class=\"token function\">allowedMethods</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"实现文件上传\"><a href=\"#实现文件上传\" class=\"headerlink\" title=\"实现文件上传\"></a>实现文件上传</h2><h3 id=\"使用koa-multer-中间件\"><a href=\"#使用koa-multer-中间件\" class=\"headerlink\" title=\"使用koa-multer 中间件\"></a>使用koa-multer 中间件</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">npm install koa<span class=\"token operator\">-</span>multer <span class=\"token operator\">--</span>save\n<span class=\"token keyword\">const</span> multer <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-multer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//加载koa-multer模块</span>\n<span class=\"token comment\">// 上传 图片</span>\n<span class=\"token keyword\">var</span> storage <span class=\"token operator\">=</span> multer<span class=\"token punctuation\">.</span><span class=\"token function\">diskStorage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//文件保存路径</span>\n        <span class=\"token function-variable function\">destination</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">,</span> cb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'public/uploads/'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">//修改文件名称</span>\n        <span class=\"token function-variable function\">filename</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">,</span> cb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">var</span> fileFormat <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span>originalname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">+</span> fileFormat<span class=\"token punctuation\">[</span>fileFormat<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">//加载配置</span>\n<span class=\"token keyword\">var</span> upload <span class=\"token operator\">=</span> <span class=\"token function\">multer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">storage</span><span class=\"token operator\">:</span> storage\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/upload'</span><span class=\"token punctuation\">,</span> upload<span class=\"token punctuation\">.</span><span class=\"token function\">single</span><span class=\"token punctuation\">(</span><span class=\"token string\">'file'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">filename</span><span class=\"token operator\">:</span> ctx<span class=\"token punctuation\">.</span>req<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span>filename <span class=\"token comment\">//返回文件名</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"使用-koa-body-代替-koa-bodyparser-和-koa-multer\"><a href=\"#使用-koa-body-代替-koa-bodyparser-和-koa-multer\" class=\"headerlink\" title=\"使用 koa-body 代替 koa-bodyparser 和 koa-multer\"></a>使用 koa-body 代替 koa-bodyparser 和 koa-multer</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">npm i koa<span class=\"token operator\">-</span>body <span class=\"token operator\">-</span><span class=\"token constant\">S</span>\n<span class=\"token keyword\">const</span> koaBody <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-body'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> Router <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-router'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">koa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">koaBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">multipart</span><span class=\"token operator\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 支持文件上传</span>\n  <span class=\"token literal-property property\">encoding</span><span class=\"token operator\">:</span><span class=\"token string\">'gzip'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">formidable</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">uploadDir</span><span class=\"token operator\">:</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span><span class=\"token string\">'public/upload/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 设置文件上传目录</span>\n    <span class=\"token literal-property property\">keepExtensions</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 保持文件的后缀</span>\n    <span class=\"token literal-property property\">maxFieldsSize</span><span class=\"token operator\">:</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 文件上传大小</span>\n    <span class=\"token function-variable function\">onFileBegin</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span>file</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 文件上传前的设置</span>\n      <span class=\"token comment\">// console.log(`name: $&#123;name&#125;`);</span>\n      <span class=\"token comment\">// console.log(file);</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//上传的文件信息</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//上传的所有信息</span>\n  ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"koa-body-的基本参数\"><a href=\"#koa-body-的基本参数\" class=\"headerlink\" title=\"koa-body 的基本参数\"></a><code>koa-body</code> 的基本参数</h4><table>\n<thead>\n<tr>\n<th align=\"left\">参数名</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">类型</th>\n<th align=\"left\">默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">patchNode</td>\n<td align=\"left\">将请求体打到原生 node.js 的<code>ctx.req</code>中</td>\n<td align=\"left\">Boolean</td>\n<td align=\"left\"><code>false</code></td>\n</tr>\n<tr>\n<td align=\"left\">patchKoa</td>\n<td align=\"left\">将请求体打到 koa 的 <code>ctx.request</code> 中</td>\n<td align=\"left\">Boolean</td>\n<td align=\"left\"><code>true</code></td>\n</tr>\n<tr>\n<td align=\"left\">jsonLimit</td>\n<td align=\"left\">JSON 数据体的大小限制</td>\n<td align=\"left\">String / Integer</td>\n<td align=\"left\"><code>1mb</code></td>\n</tr>\n<tr>\n<td align=\"left\">formLimit</td>\n<td align=\"left\">限制表单请求体的大小</td>\n<td align=\"left\">String / Integer</td>\n<td align=\"left\"><code>56kb</code></td>\n</tr>\n<tr>\n<td align=\"left\">textLimit</td>\n<td align=\"left\">限制 text body 的大小</td>\n<td align=\"left\">String / Integer</td>\n<td align=\"left\"><code>56kb</code></td>\n</tr>\n<tr>\n<td align=\"left\">encoding</td>\n<td align=\"left\">表单的默认编码</td>\n<td align=\"left\">String</td>\n<td align=\"left\"><code>utf-8</code></td>\n</tr>\n<tr>\n<td align=\"left\">multipart</td>\n<td align=\"left\">是否支持 <code>multipart-formdate</code> 的表单</td>\n<td align=\"left\">Boolean</td>\n<td align=\"left\"><code>false</code></td>\n</tr>\n<tr>\n<td align=\"left\">urlencoded</td>\n<td align=\"left\">是否支持 <code>urlencoded</code> 的表单</td>\n<td align=\"left\">Boolean</td>\n<td align=\"left\"><code>true</code></td>\n</tr>\n<tr>\n<td align=\"left\">text</td>\n<td align=\"left\">是否解析 <code>text/plain</code> 的表单</td>\n<td align=\"left\">Boolean</td>\n<td align=\"left\"><code>true</code></td>\n</tr>\n<tr>\n<td align=\"left\">json</td>\n<td align=\"left\">是否解析 <code>json</code> 请求体</td>\n<td align=\"left\">Boolean</td>\n<td align=\"left\"><code>true</code></td>\n</tr>\n<tr>\n<td align=\"left\">jsonStrict</td>\n<td align=\"left\">是否使用 json 严格模式，<code>true</code> 会只处理数组和对象</td>\n<td align=\"left\">Boolean</td>\n<td align=\"left\"><code>true</code></td>\n</tr>\n<tr>\n<td align=\"left\">formidable</td>\n<td align=\"left\">配置更多的关于 <code>multipart</code> 的选项</td>\n<td align=\"left\">Object</td>\n<td align=\"left\"><code>&#123;&#125;</code></td>\n</tr>\n<tr>\n<td align=\"left\">onError</td>\n<td align=\"left\">错误处理</td>\n<td align=\"left\">Function</td>\n<td align=\"left\"><code>function()&#123;&#125;</code></td>\n</tr>\n<tr>\n<td align=\"left\">stict</td>\n<td align=\"left\">严格模式,启用后不会解析 <code>GET, HEAD, DELETE</code> 请求</td>\n<td align=\"left\">Boolean</td>\n<td align=\"left\"><code>true</code></td>\n</tr>\n</tbody></table>\n<h4 id=\"formidable-的相关配置参数\"><a href=\"#formidable-的相关配置参数\" class=\"headerlink\" title=\"formidable 的相关配置参数\"></a><code>formidable</code> 的相关配置参数</h4><table>\n<thead>\n<tr>\n<th align=\"left\">参数名</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">类型</th>\n<th align=\"left\">默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">maxFields</td>\n<td align=\"left\">限制字段的数量</td>\n<td align=\"left\">Integer</td>\n<td align=\"left\"><code>1000</code></td>\n</tr>\n<tr>\n<td align=\"left\">maxFieldsSize</td>\n<td align=\"left\">限制字段的最大大小</td>\n<td align=\"left\">Integer</td>\n<td align=\"left\"><code>2 * 1024 * 1024</code></td>\n</tr>\n<tr>\n<td align=\"left\">uploadDir</td>\n<td align=\"left\">文件上传的文件夹</td>\n<td align=\"left\">String</td>\n<td align=\"left\"><code>os.tmpDir()</code></td>\n</tr>\n<tr>\n<td align=\"left\">keepExtensions</td>\n<td align=\"left\">保留原来的文件后缀</td>\n<td align=\"left\">Boolean</td>\n<td align=\"left\"><code>false</code></td>\n</tr>\n<tr>\n<td align=\"left\">hash</td>\n<td align=\"left\">如果要计算文件的 hash，则可以选择 <code>md5/sha1</code></td>\n<td align=\"left\">String</td>\n<td align=\"left\"><code>false</code></td>\n</tr>\n<tr>\n<td align=\"left\">multipart</td>\n<td align=\"left\">是否支持多文件上传</td>\n<td align=\"left\">Boolean</td>\n<td align=\"left\"><code>true</code></td>\n</tr>\n<tr>\n<td align=\"left\">onFileBegin</td>\n<td align=\"left\">文件上传前的一些设置操作</td>\n<td align=\"left\">Function</td>\n<td align=\"left\"><code>function(name,file)&#123;&#125;</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"图片上传成功后，获取图片\"><a href=\"#图片上传成功后，获取图片\" class=\"headerlink\" title=\"图片上传成功后，获取图片\"></a>图片上传成功后，获取图片</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Koa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> serve <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-static'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> koaBody <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-body'</span><span class=\"token punctuation\">)</span>\n\napp\n    <span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">serve</span><span class=\"token punctuation\">(</span>__dirname <span class=\"token operator\">+</span> <span class=\"token string\">'/files'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// files文件夹用于保存上传的文件,也是静态资源地址</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">.</span><span class=\"token function\">routes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 前端使用formData方式组装数据</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/upload-files'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">koaBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">jsonLimit</span><span class=\"token operator\">:</span> <span class=\"token string\">'2mb'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">multipart</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> savePath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./files</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> reader <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">createReadStream</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> writer <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">createWriteStream</span><span class=\"token punctuation\">(</span>savePath<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">const</span> pro <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">var</span> stream <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>writer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        stream<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'finish'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">http://当前服务器地址</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>data<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    \n    ctx<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span>  <span class=\"token keyword\">await</span> pro\n    \n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"koa-send实现文件下载\"><a href=\"#koa-send实现文件下载\" class=\"headerlink\" title=\"koa-send实现文件下载\"></a>koa-send实现文件下载</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> send <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-send'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/download/:name'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">upload/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">attachment</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">send</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"koa中间件记录\"><a href=\"#koa中间件记录\" class=\"headerlink\" title=\"koa中间件记录\"></a>koa中间件记录</h2><h3 id=\"koa的错误处理-koa-onerror\"><a href=\"#koa的错误处理-koa-onerror\" class=\"headerlink\" title=\"koa的错误处理   koa-onerror\"></a>koa的错误处理   koa-onerror</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">npm install koa<span class=\"token operator\">-</span>onerror <span class=\"token operator\">--</span>save\n<span class=\"token keyword\">var</span> onerror <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Koa-onerror'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">onerror</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"koa日志-koa-logger\"><a href=\"#koa日志-koa-logger\" class=\"headerlink\" title=\"koa日志  koa-logger\"></a>koa日志  koa-logger</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-logger'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// logger</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> start <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> ms <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> start\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>ctx<span class=\"token punctuation\">.</span>method<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>ctx<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> - </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>ms<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">ms</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"koa-json\"><a href=\"#koa-json\" class=\"headerlink\" title=\"koa-json\"></a>koa-json</h3><p>美观的输出JSON response的Koa中间件 有两种使用方式： 一种是总是返回美化了的json数据：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>另一种是默认不进行美化，但是当地址栏传入pretty参数的时候，则返回的结果是进行了美化的。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">pretty</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">param</span><span class=\"token operator\">:</span> <span class=\"token string\">'pretty'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h2 id=\"koa-jwt和jsonwebtoken进行token验证\"><a href=\"#koa-jwt和jsonwebtoken进行token验证\" class=\"headerlink\" title=\"koa-jwt和jsonwebtoken进行token验证\"></a>koa-jwt和jsonwebtoken进行token验证</h2><p><code>koa-jwt</code> 主要提供路有权限控制的功能，它会对需要限制的资源请求进行检查</p>\n<p><code>token</code> 默认被携带在Headers 中的名为Authorization的键值对中，<code>koa-jwt</code>也是在该位置获取<code>token</code> 的</p>\n<p><code>app.use(jwt(&#123; secret: &#39;shared-secret&#39;, key: &#39;jwtdata&#39; &#125;))</code> 可以使用另外一<code>ctx key</code>来表示解码数据，然后就可以通过<code>ctx.state.jwtdata</code>代替<code>ctx.state.user</code>获得解码数据</p>\n<ul>\n<li><code>secret</code> 的值可以使用函数代替，以此产生动态的加密秘钥</li>\n<li><code>koa-jwt</code> 依赖于<code>jsonwebtoken</code>和<code>koa-unless</code>两个库的</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">jwt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">secret</span><span class=\"token operator\">:</span><span class=\"token string\">'chambers'</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unless</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\/api</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://raw.githubusercontent.com/lin-xin/blog/master/jwt-demo/public/jwt.png\" alt=\"jwt流程图\"></p>\n<h3 id=\"生成token\"><a href=\"#生成token\" class=\"headerlink\" title=\"生成token\"></a>生成token</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-router'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> jwt <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'jsonwebtoken'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> userModel <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../models/userModel.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>data<span class=\"token punctuation\">.</span>name <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>data<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> <span class=\"token string\">'000002'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">msg</span><span class=\"token operator\">:</span> <span class=\"token string\">'参数不合法'</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> userModel<span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> data<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> data<span class=\"token punctuation\">.</span>password\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span><span class=\"token function\">sign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> result<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">_id</span><span class=\"token operator\">:</span> result<span class=\"token punctuation\">.</span>_id\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'my_token'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">expiresIn</span><span class=\"token operator\">:</span> <span class=\"token string\">'2h'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> <span class=\"token string\">'000001'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> token<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">msg</span><span class=\"token operator\">:</span> <span class=\"token string\">'登录成功'</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> <span class=\"token string\">'000002'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">msg</span><span class=\"token operator\">:</span> <span class=\"token string\">'用户名或密码错误'</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> router<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在验证了用户名密码正确之后，调用 jsonwebtoken 的 sign() 方法来生成token，接收三个参数，第一个是载荷，用于编码后存储在 token 中的数据，也是验证 token 后可以拿到的数据；第二个是密钥，自己定义的，验证的时候也是要相同的密钥才能解码；第三个是options，可以设置 token 的过期时间。</p>\n<p>jwt.decode(token); 可以解析出sign（）中第一个参数。</p>\n<h3 id=\"获取token\"><a href=\"#获取token\" class=\"headerlink\" title=\"获取token\"></a>获取token</h3><p>前端请求头在Authorization中携带token，用于后台验证</p>\n<p>每次请求都要获取 localStorage 中的 token，这样很麻烦，这里使用了 axios 的请求拦截器，对每次请求都进行了取 token 放到 headers 中的操作。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">axios<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    config<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">[</span><span class=\"token string\">'Authorization'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Bearer '</span> <span class=\"token operator\">+</span> token<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> config<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"验证token\"><a href=\"#验证token\" class=\"headerlink\" title=\"验证token\"></a>验证token</h3><p>通过 koa-jwt 中间件来进行验证</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> koa <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> koajwt <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-jwt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">koa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 错误处理</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            ctx<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">401</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token string\">'Protected resource, use Authorization header to get access\\n'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">throw</span> err<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">koajwt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">secret</span><span class=\"token operator\">:</span> <span class=\"token string\">'my_token'</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unless</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\/user\\/login</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>通过 app.use 来调用该中间件，并传入密钥 <code>&#123;secret: &#39;my_token&#39;&#125;</code>，unless 可以指定哪些 URL 不需要进行 token 验证。token 验证失败的时候会抛出401错误，因此需要添加错误处理，而且要放在 app.use(koajwt()) 之前，否则不执行。</p>\n<p>如果请求时没有token或者token过期，则会返回401。</p>\n<h3 id=\"解析koa-jwt\"><a href=\"#解析koa-jwt\" class=\"headerlink\" title=\"解析koa-jwt\"></a>解析koa-jwt</h3><p>上面使用 jsonwebtoken 的 sign() 方法来生成 token 的，那么 koa-jwt 做了些什么帮我们来验证 token。</p>\n<h4 id=\"resolvers-auth-header-js\"><a href=\"#resolvers-auth-header-js\" class=\"headerlink\" title=\"resolvers/auth-header.js\"></a>resolvers/auth-header.js</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">resolveAuthorizationHeader</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx<span class=\"token punctuation\">,</span> opts</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ctx<span class=\"token punctuation\">.</span>header <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>ctx<span class=\"token punctuation\">.</span>header<span class=\"token punctuation\">.</span>authorization<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">const</span> parts <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span>header<span class=\"token punctuation\">.</span>authorization<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>parts<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> scheme <span class=\"token operator\">=</span> parts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> credentials <span class=\"token operator\">=</span> parts<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^Bearer$</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>scheme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> credentials<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>opts<span class=\"token punctuation\">.</span>passthrough<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        ctx<span class=\"token punctuation\">.</span><span class=\"token function\">throw</span><span class=\"token punctuation\">(</span><span class=\"token number\">401</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bad Authorization header format. Format is \"Authorization: Bearer &lt;token>\"'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在 auth-header.js 中，判断请求头中是否带了 authorization，如果有，将 token 从 authorization 中分离出来。如果没有 authorization，则代表了客户端没有传 token 到服务器，这时候就抛出 401 错误状态。</p>\n<h4 id=\"verify-js\"><a href=\"#verify-js\" class=\"headerlink\" title=\"verify.js\"></a>verify.js</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> jwt <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'jsonwebtoken'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        jwt<span class=\"token punctuation\">.</span><span class=\"token function\">verify</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> decoded</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            error <span class=\"token operator\">?</span> <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>decoded<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在 verify.js 中，使用 jsonwebtoken 提供的 verify() 方法进行验证返回结果。jsonwebtoken 的 sign() 方法来生成 token 的，而 verify() 方法则是用来认证和解析 token。如果 token 无效，则会在此方法被验证出来。</p>\n<h4 id=\"index-js\"><a href=\"#index-js\" class=\"headerlink\" title=\"index.js\"></a>index.js</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> decodedToken <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">verify</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> secret<span class=\"token punctuation\">,</span> opts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isRevoked<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> tokenRevoked <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">isRevoked</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> decodedToken<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tokenRevoked<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Token revoked'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\nctx<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> decodedToken<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 这里的key = 'user'</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tokenKey<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    ctx<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">[</span>tokenKey<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> token<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在 index.js 中，调用 verify.js 的方法进行验证并解析 token，拿到上面进行 sign() 的数据 <code>&#123;name: result.name, _id: result._id&#125;</code>，并赋值给 <code>ctx.state.user</code>，在控制器中便可以直接通过 <code>ctx.state.user</code> 拿到 <code>name</code> 和 <code>_id</code>。</p>\n<h4 id=\"安全性\"><a href=\"#安全性\" class=\"headerlink\" title=\"安全性\"></a>安全性</h4><ul>\n<li>如果 JWT 的加密密钥泄露的话，那么就可以通过密钥生成 token，随意的请求 API 了。因此密钥绝对不能存在前端代码中，不然很容易就能被找到。</li>\n<li>在 HTTP 请求中，token 放在 header 中，中间者很容易可以通过抓包工具抓取到 header 里的数据。而 HTTPS 即使能被抓包，但是它是加密传输的，所以也拿不到 token，就会相对安全了。</li>\n</ul>\n<h2 id=\"bcryptjs密码加密\"><a href=\"#bcryptjs密码加密\" class=\"headerlink\" title=\"bcryptjs密码加密\"></a>bcryptjs密码加密</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">npm install bcryptjs <span class=\"token operator\">--</span>save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"同步用法-Sync\"><a href=\"#同步用法-Sync\" class=\"headerlink\" title=\"同步用法(Sync)\"></a>同步用法(Sync)</h3><p>生成hash密码</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> bcrypt <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bcryptjs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> salt <span class=\"token operator\">=</span> bcrypt<span class=\"token punctuation\">.</span><span class=\"token function\">genSaltSync</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// hash 加密后的密码       \"B4c0/\\/\"加密前的密码   </span>\n<span class=\"token keyword\">var</span> hash <span class=\"token operator\">=</span> bcrypt<span class=\"token punctuation\">.</span><span class=\"token function\">hashSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B4c0/\\/\"</span><span class=\"token punctuation\">,</span> salt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>密码验证</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">bcrypt<span class=\"token punctuation\">.</span><span class=\"token function\">compareSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B4c0/\\/\"</span><span class=\"token punctuation\">,</span> hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true </span>\nbcrypt<span class=\"token punctuation\">.</span><span class=\"token function\">compareSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"not_bacon\"</span><span class=\"token punctuation\">,</span> hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>快速生成hash值</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> hash <span class=\"token operator\">=</span> bcrypt<span class=\"token punctuation\">.</span><span class=\"token function\">hashSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bacon'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"异步用法-Async\"><a href=\"#异步用法-Async\" class=\"headerlink\" title=\"异步用法(Async)\"></a>异步用法(Async)</h3><p>生成hash密码</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> bcrypt <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bcryptjs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbcrypt<span class=\"token punctuation\">.</span><span class=\"token function\">genSalt</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> salt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    bcrypt<span class=\"token punctuation\">.</span><span class=\"token function\">hash</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B4c0/\\/\"</span><span class=\"token punctuation\">,</span> salt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> hash</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// Store hash in your password DB. </span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>密码验证</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Load hash from your password DB. </span>\nbcrypt<span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B4c0/\\/\"</span><span class=\"token punctuation\">,</span> hash<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// res === true </span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbcrypt<span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"not_bacon\"</span><span class=\"token punctuation\">,</span> hash<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// res === false </span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token comment\">// As of bcryptjs 2.4.0, compare returns a promise if callback is omitted: </span>\nbcrypt<span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B4c0/\\/\"</span><span class=\"token punctuation\">,</span> hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// res === true </span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>快速生成hash值</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">bcrypt<span class=\"token punctuation\">.</span><span class=\"token function\">hash</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bacon'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> hash</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n\n\n<h2 id=\"moment-时间中间件\"><a href=\"#moment-时间中间件\" class=\"headerlink\" title=\"moment 时间中间件\"></a><code>moment</code> 时间中间件</h2><h2 id=\"markdown-it-markdown语法\"><a href=\"#markdown-it-markdown语法\" class=\"headerlink\" title=\"markdown-it markdown语法\"></a><code>markdown-it</code> markdown语法</h2>","feature":false,"text":"初始化项目# 初始化package.json npm init # 安装koa2 npm install koa hello world 代码 const Koa = require('koa'); //引入Koa框架 const app = new Koa(); app.use...","link":"","photos":[],"count_time":{"symbolsCount":"18k","symbolsTime":"17 mins."},"categories":[{"name":"Node.js","slug":"Node-js","count":1,"path":"api/categories/Node-js.json"}],"tags":[{"name":"Koa","slug":"Koa","count":1,"path":"api/tags/Koa.json"},{"name":"MySQL","slug":"MySQL","count":1,"path":"api/tags/MySQL.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">初始化项目</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#hello-world-%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">hello world 代码</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#async-await%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">async&#x2F;await的使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%8E%E4%B8%8A%E8%BF%B0%E4%BE%8B%E5%AD%90%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%87%BA-async-await-%E7%9A%84%E7%89%B9%E7%82%B9%EF%BC%9A\"><span class=\"toc-text\">从上述例子可以看出 async&#x2F;await 的特点：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#koa-router%E4%B8%AD%E9%97%B4%E4%BB%B6\"><span class=\"toc-text\">koa-router中间件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85koa-router%E4%B8%AD%E9%97%B4%E4%BB%B6\"><span class=\"toc-text\">安装koa-router中间件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#koa-router%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">koa-router的使用</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%B7%E6%B1%82%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96\"><span class=\"toc-text\">请求数据获取</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#GTET%E8%AF%B7%E6%B1%82%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96\"><span class=\"toc-text\">GTET请求数据获取</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#POST%E8%AF%B7%E6%B1%82%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96\"><span class=\"toc-text\">POST请求数据获取</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#koa-bodyparser%E4%B8%AD%E9%97%B4%E4%BB%B6\"><span class=\"toc-text\">koa-bodyparser中间件</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E5%8A%A0%E8%BD%BD\"><span class=\"toc-text\">静态资源加载</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#koa-static%E4%B8%AD%E9%97%B4%E4%BB%B6%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">koa-static中间件使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#koa-static-router%E4%B8%AD%E9%97%B4%E4%BB%B6-%E5%AE%9E%E7%8E%B0%E5%A4%9A%E4%B8%AA-amp-amp-%E5%A4%9A%E5%B1%82%E8%B7%AF%E7%94%B1%E5%8A%A0%E8%BD%BD%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90\"><span class=\"toc-text\">koa-static-router中间件, 实现多个&amp;&amp;多层路由加载静态资源</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%AE%80%E5%8D%95%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">简单配置</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%8D%95%E4%B8%AA%E8%B7%AF%E7%94%B1\"><span class=\"toc-text\">单个路由</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E4%B8%AA%E8%B7%AF%E7%94%B1\"><span class=\"toc-text\">多个路由</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#cookie-session\"><span class=\"toc-text\">cookie&#x2F;session</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#koa2%E4%BD%BF%E7%94%A8cookie\"><span class=\"toc-text\">koa2使用cookie</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#koa2%E5%AE%9E%E7%8E%B0session\"><span class=\"toc-text\">koa2实现session</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#koa-session%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">koa-session的使用</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8ejs%E6%A8%A1%E6%9D%BF\"><span class=\"toc-text\">使用ejs模板</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%9E%E6%8E%A5mysql%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">连接mysql数据库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85Sequelize\"><span class=\"toc-text\">安装Sequelize</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-Sequelize-%E5%88%9D%E5%A7%8B%E5%8C%96%E8%BF%9E%E6%8E%A5%E6%B1%A0\"><span class=\"toc-text\">使用 Sequelize 初始化连接池</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%A8%A1%E5%9E%8B\"><span class=\"toc-text\">创建数据表模型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%8E%A7%E5%88%B6%E5%99%A8\"><span class=\"toc-text\">数据表控制器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E8%B7%AF%E7%94%B1%E8%A1%A8\"><span class=\"toc-text\">数据路由表</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">解决跨域问题</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0\"><span class=\"toc-text\">实现文件上传</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8koa-multer-%E4%B8%AD%E9%97%B4%E4%BB%B6\"><span class=\"toc-text\">使用koa-multer 中间件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-koa-body-%E4%BB%A3%E6%9B%BF-koa-bodyparser-%E5%92%8C-koa-multer\"><span class=\"toc-text\">使用 koa-body 代替 koa-bodyparser 和 koa-multer</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#koa-body-%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">koa-body 的基本参数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#formidable-%E7%9A%84%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">formidable 的相关配置参数</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E6%88%90%E5%8A%9F%E5%90%8E%EF%BC%8C%E8%8E%B7%E5%8F%96%E5%9B%BE%E7%89%87\"><span class=\"toc-text\">图片上传成功后，获取图片</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#koa-send%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD\"><span class=\"toc-text\">koa-send实现文件下载</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#koa%E4%B8%AD%E9%97%B4%E4%BB%B6%E8%AE%B0%E5%BD%95\"><span class=\"toc-text\">koa中间件记录</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#koa%E7%9A%84%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86-koa-onerror\"><span class=\"toc-text\">koa的错误处理   koa-onerror</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#koa%E6%97%A5%E5%BF%97-koa-logger\"><span class=\"toc-text\">koa日志  koa-logger</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#koa-json\"><span class=\"toc-text\">koa-json</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#koa-jwt%E5%92%8Cjsonwebtoken%E8%BF%9B%E8%A1%8Ctoken%E9%AA%8C%E8%AF%81\"><span class=\"toc-text\">koa-jwt和jsonwebtoken进行token验证</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%9F%E6%88%90token\"><span class=\"toc-text\">生成token</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96token\"><span class=\"toc-text\">获取token</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%AA%8C%E8%AF%81token\"><span class=\"toc-text\">验证token</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%9E%90koa-jwt\"><span class=\"toc-text\">解析koa-jwt</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#resolvers-auth-header-js\"><span class=\"toc-text\">resolvers&#x2F;auth-header.js</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#verify-js\"><span class=\"toc-text\">verify.js</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#index-js\"><span class=\"toc-text\">index.js</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%89%E5%85%A8%E6%80%A7\"><span class=\"toc-text\">安全性</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#bcryptjs%E5%AF%86%E7%A0%81%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">bcryptjs密码加密</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%8C%E6%AD%A5%E7%94%A8%E6%B3%95-Sync\"><span class=\"toc-text\">同步用法(Sync)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BC%82%E6%AD%A5%E7%94%A8%E6%B3%95-Async\"><span class=\"toc-text\">异步用法(Async)</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#moment-%E6%97%B6%E9%97%B4%E4%B8%AD%E9%97%B4%E4%BB%B6\"><span class=\"toc-text\">moment 时间中间件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#markdown-it-markdown%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">markdown-it markdown语法</span></a></li></ol>","author":{"name":"chenin","slug":"chenin","avatar":"/img/touxiang.jpg","link":"https://github.com/Ccc946","description":"盛年不重来，一日难再晨。及时宜自勉，岁月不待人。","socials":{"github":"https://github.com/Ccc946","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"WebStorm 2019.3.1激活码","uid":"6cfd9c2293bfbcc79930156aac5124e0","slug":"WebStorm","date":"2021-04-21T13:42:00.000Z","updated":"2023-02-04T04:04:55.657Z","comments":true,"path":"api/articles/WebStorm.json","keywords":null,"cover":"../img/webstorm/sdg415gd5s.png","text":"下面正式开始激活（WebStorm 2019.3.1版） WebStorm 资源链接：https://pan.baidu.com/s/1UibJECYNiFuJrG2l89c-xw 提取码：w8y7。 jetbrains-agent 资源链接：http://note.youdao...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"软件工具","slug":"软件工具","count":1,"path":"api/categories/软件工具.json"}],"tags":[{"name":"WebStorm","slug":"WebStorm","count":1,"path":"api/tags/WebStorm.json"},{"name":"软件激活","slug":"软件激活","count":1,"path":"api/tags/软件激活.json"}],"author":{"name":"chenin","slug":"chenin","avatar":"/img/touxiang.jpg","link":"https://github.com/Ccc946","description":"盛年不重来，一日难再晨。及时宜自勉，岁月不待人。","socials":{"github":"https://github.com/Ccc946","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},"next_post":{}}